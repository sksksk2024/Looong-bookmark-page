{"version":3,"sources":["script.js"],"names":["document","addEventListener","clipOverflowingElements","querySelectorAll","forEach","element","rect","getBoundingClientRect","left","right","window","innerWidth","documentElement","clientWidth","isOverflowing","console","log","concat","className","style","overflow","maxWidth","position","clipPath","burger","querySelector","menu","body","classList","toggle","add","remove","h3Buttons","sections","button","index","section","btn","event","open","close","content","header","openButton","getElementById","closeButton","toggleContent","isVisible","contains","emailInput","errorMessage","preventDefault","emailValue","value","test","display"],"mappings":"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","file":"script.js","sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n  // Function to check if an element is overflowing\r\n  function isOverflowing(element) {\r\n    const rect = element.getBoundingClientRect();\r\n    return (\r\n      rect.left < 0 || \r\n      rect.right > (window.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n  }\r\n\r\n  // Function to clip overflowing elements\r\n  function clipOverflowingElements() {\r\n    // Select all elements on the page\r\n    const elements = document.querySelectorAll('body *');\r\n\r\n    elements.forEach(element => {\r\n      if (isOverflowing(element)) {\r\n        console.log(`Clipping element: ${element.className}`); // Debugging info\r\n        element.style.overflow = 'hidden';\r\n        element.style.maxWidth = '100%'; // Ensure the element fits within the viewport\r\n        element.style.position = 'relative'; // Maintain positioning\r\n        element.style.clipPath = 'inset(0 0 0 0)'; // Clips based on the detected overflow (adjust as needed)\r\n      }\r\n    });\r\n  }\r\n\r\n  // Initial clipping on load\r\n  clipOverflowingElements();\r\n\r\n  // Optional: Re-check on window resize\r\n  window.addEventListener('resize', clipOverflowingElements);\r\n});\r\n\r\n//header setup\r\n document.addEventListener('DOMContentLoaded', () => {\r\n   const burger = document.querySelector('.header__burger');\r\n   const menu = document.querySelector('.header__menu');\r\n   const body = document.body;\r\n\r\n   // Toggle menu and no-scroll class on body when burger is clicked\r\n   burger.addEventListener('click', () => {\r\n     menu.classList.toggle('hidden');\r\n     body.classList.toggle('no-scroll');\r\n   });\r\n\r\n   // Restore scrolling and hide menu when window is resized above 1008px\r\n   window.addEventListener('resize', () => {\r\n     if (window.innerWidth > 1008) {\r\n       menu.classList.add('hidden');\r\n       body.classList.remove('no-scroll');\r\n     }\r\n   });\r\n });\r\n\r\n\r\n//main__part2/3 setup\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const h3Buttons = document.querySelectorAll('.main__part2 h3');\r\n  const sections = document.querySelectorAll('.main__part3');\r\n\r\n  // Initially display the first section and add focus to the first h3\r\n  sections[0].classList.remove('hide');\r\n  h3Buttons[0].classList.add('focused');\r\n\r\n  h3Buttons.forEach((button, index) => {\r\n    button.addEventListener('click', () => {\r\n      // Hide all sections\r\n      sections.forEach(section => section.classList.add('hide'));\r\n\r\n      // Remove focus from all buttons\r\n      h3Buttons.forEach(btn => btn.classList.remove('focused'));\r\n\r\n      // Show the selected section and add focus to the clicked button\r\n      sections[index].classList.remove('hide');\r\n      button.classList.add('focused');\r\n    });\r\n  });\r\n});\r\n\r\n//main__part5 setup\r\ndocument.addEventListener('DOMContentLoaded', (event) => {\r\n  const elements = [\r\n    { open: 'open1', close: 'close1', content: 'content1', header: 'header1' },\r\n    { open: 'open2', close: 'close2', content: 'content2', header: 'header2' },\r\n    { open: 'open3', close: 'close3', content: 'content3', header: 'header3' },\r\n    { open: 'open4', close: 'close4', content: 'content4', header: 'header4'}\r\n  ];\r\n\r\n  elements.forEach(element => {\r\n    const openButton = document.getElementById(element.open);\r\n    const closeButton = document.getElementById(element.close);\r\n    const content = document.getElementById(element.content);\r\n    const header = document.getElementById(element.header);\r\n\r\n    const toggleContent = () => {\r\n      const isVisible = !openButton.classList.contains('hide');\r\n      openButton.classList.toggle('hide', isVisible);\r\n      closeButton.classList.toggle('hide', !isVisible);\r\n      content.classList.toggle('hide', !isVisible);\r\n    };\r\n    \r\n    openButton.addEventListener('mouseover', toggleContent);\r\n    openButton.addEventListener('mouseout', toggleContent);\r\n    \r\n    closeButton.addEventListener('mouseover', toggleContent);\r\n    closeButton.addEventListener('mouseout', toggleContent);\r\n\r\n    header.addEventListener('mouseover', toggleContent);\r\n    header.addEventListener('mouseout', toggleContent);\r\n  });\r\n});\r\n\r\n//footer setup\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  const emailInput = document.getElementById('email');\r\n  const errorMessage = document.getElementById('email-error');\r\n  const submitButton = document.getElementById('submit-button');\r\n\r\n  submitButton.addEventListener('click', (event) => {\r\n    event.preventDefault();\r\n\r\n    // Simple email validation\r\n    const emailValue = emailInput.value;\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n    if (!emailPattern.test(emailValue)) {\r\n      emailInput.classList.add('invalid');\r\n      errorMessage.classList.remove('hide');\r\n      errorMessage.style.display = 'block';\r\n    } else {\r\n      emailInput.classList.remove('invalid');\r\n      errorMessage.classList.add('hide');\r\n      errorMessage.style.display = 'none';\r\n    }\r\n  });\r\n});"]}